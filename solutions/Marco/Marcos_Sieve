function sieve_optimized(n::Int)
    if n < 2
        return Int[]
    end
    sieve_size = (n - 1) รท 2
    is_prime = trues(sieve_size)
    primes = [2]
    for p_idx in 1:isqrt(n) รท 2
        if is_prime[p_idx]
            p_val = 2 * p_idx + 1
            start_idx = (p_val * p_val - 1) รท 2
            for i in start_idx:p_val:sieve_size
                is_prime[i] = false
            end
        end
    end
    for i in 1:sieve_size
        if is_prime[i]
            push!(primes, 2 * i + 1)
        end
    end
    return primes
end
